#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=3

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain="$(ynh_app_setting_get --app=$app --key=domain)"
#REMOVEME? path="$(ynh_app_setting_get --app=$app --key=path)"
#REMOVEME? admin="$(ynh_app_setting_get --app=$app --key=admin)"
#REMOVEME? #REMOVEME? install_dir="$(ynh_app_setting_get --app=$app --key=install_dir)"
#REMOVEME? port="$(ynh_app_setting_get --app=$app --key=port)"
#REMOVEME? port_hub="$(ynh_app_setting_get --app=$app --key=port_hub)"
#REMOVEME? port_http_proxy="$(ynh_app_setting_get --app=$app --key=port_http_proxy)"
#REMOVEME? enable_terminal="$(ynh_app_setting_get --app=$app --key=enable_terminal)"
#REMOVEME? enable_extensions="$(ynh_app_setting_get --app=$app --key=enable_extensions)"

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

if [ -z "$enable_extensions" ]; then
	enable_extensions=0
	ynh_app_setting_set --app=$app --key=enable_extensions --value=$enable_extensions
fi


# If install_dir doesn't exist, create it
if [ -z "$install_dir" ]; then
#REMOVEME? 	install_dir=/opt/yunohost/$app

	mkdir -p $install_dir

#REMOVEME? 	ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
fi

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=48

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	ynh_clean_check_starting

	# restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=2

ynh_systemd_action --service_name=$app --action="stop"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=83

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

npm install -g configurable-http-proxy

python3 -m pip install pipenv

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=160

	# Set permissions to app files
	mkdir -p "$install_dir/.venv"
	chown -R $app:$app "$install_dir"
	chmod -R g=u,g-w,o-rwx "$install_dir"
	setfacl -nR -m g:$app.main:rx -m d:g:$app.main:rx "$install_dir/.venv"
	setfacl -n -m g:$app.main:x "$install_dir"

	pushd "$install_dir"
		sudo -u $app PIPENV_VENV_IN_PROJECT="enabled" PIPENV_SKIP_LOCK=true python3 -m pipenv install jupyterlab==$jupyterlab_version jupyterhub notebook jupyter-server jupyterhub-ldapauthenticator pyzmq sudospawner --three 2>&1
		sudo -u $app python3 -m pipenv run jupyterhub upgrade-db 2>&1
	popd
fi

#=================================================
# SPECIFIC UPGRADE
#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

mkdir -p "$install_dir/config"
path="${path%/}"

ynh_add_config --template="jupyterhub_config.py" --destination="$install_dir/config/jupyterhub_config.py"
ynh_add_config --template="jupyter_server_config.py" --destination="$install_dir/config/jupyter_server_config.py"
ynh_add_config --template="app-sudoers" --destination="/etc/sudoers.d/$app-sudoers"
ynh_add_config --template="sudospawner-singleuser" --destination="$install_dir/.venv/bin/sudospawner-singleuser"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_replace_string --match_string="__NODE_PATH__" --replace_string="$nodejs_path" --target_file="../conf/systemd.service"

ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chmod 550 "$install_dir/.venv/bin/sudospawner-singleuser"
chown -R $app:$app "$install_dir"
chmod -R g=u,g-w,o-rwx "$install_dir"
setfacl -nR -m g:$app.main:rx -m d:g:$app.main:rx "$install_dir/.venv"
setfacl -n -m g:$app.main:x "$install_dir"
chown root:root "/etc/sudoers.d/$app-sudoers"
chmod 440 "/etc/sudoers.d/$app-sudoers"


#=================================================
# BUILD USER LABS
#=================================================
ynh_script_progression --message="Building JupyterLab for each user..." --weight=10

if [ $enable_extensions -eq 1 ]; then
	ynh_use_nodejs
	for user in $(ynh_user_list); do
		JUPYTERLAB_DIR="$(getent passwd $user | cut -d: -f6)/.local/share/$app/lab"
		node_path="$nodejs_path:$(sudo -u $user sh -c 'echo $PATH')"
		sudo -u $user env "PATH=$node_path" "$install_dir/.venv/bin/jupyter" lab build --app-dir="$JUPYTERLAB_DIR"
	done
fi

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --description="$app daemon" --log="$app"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action=start --line_match="JupyterHub is now running at" --log_path="systemd"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..."

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
