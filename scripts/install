#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

#REMOVEME? ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
#REMOVEME? path=$YNH_APP_ARG_PATH
#REMOVEME? is_public=$YNH_APP_ARG_IS_PUBLIC
#REMOVEME? admin=$YNH_APP_ARG_ADMIN
#REMOVEME? enable_terminal=$YNH_APP_ARG_ENABLE_TERMINAL
#REMOVEME? enable_extensions=$YNH_APP_ARG_ENABLE_EXTENSIONS

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
#REMOVEME? ynh_script_progression --message="Validating installation parameters..." --weight=1

#REMOVEME? install_dir=/opt/yunohost/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

# Register (book) web path
#REMOVEME? ynh_webpath_register --app=$app --domain=$domain --path=$path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? ynh_script_progression --message="Storing installation settings..." --weight=1

#REMOVEME? ynh_app_setting_set --app=$app --key=domain --value=$domain
#REMOVEME? ynh_app_setting_set --app=$app --key=path --value=$path
#REMOVEME? ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=enable_terminal --value=$enable_terminal
ynh_app_setting_set --app=$app --key=enable_extensions --value=$enable_extensions

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
#REMOVEME? ynh_script_progression --message="Finding an available port..." --weight=1

# Find a free port
#REMOVEME? port=$(ynh_find_port --port=8080)
#REMOVEME? port_hub=$(ynh_find_port --port=$(($port + 1)))
#REMOVEME? port_http_proxy=$(ynh_find_port --port=$(($port_hub + 1)))

#REMOVEME? ynh_app_setting_set --app=$app --key=port --value=$port
#REMOVEME? ynh_app_setting_set --app=$app --key=port_hub --value=$port_hub
#REMOVEME? ynh_app_setting_set --app=$app --key=port_http_proxy --value=$port_http_proxy

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
#REMOVEME? ynh_system_user_create --username=$app

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing dependencies..." --weight=23

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

python3 -m pip install pipenv

npm install -g configurable-http-proxy

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=64

#REMOVEME? ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir

# Set permissions to app files
mkdir -p "$install_dir/.venv"
chown -R $app:$app "$install_dir"
chmod -R g=u,g-w,o-rwx "$install_dir"
setfacl -nR -m g:$app.main:rx -m d:g:$app.main:rx "$install_dir/.venv"
setfacl -n -m g:$app.main:x "$install_dir"

pushd "$install_dir"
	sudo -u $app PIPENV_VENV_IN_PROJECT="enabled" PIPENV_SKIP_LOCK=true python3 -m pipenv install jupyterlab==$jupyterlab_version jupyterhub notebook jupyter-server jupyterhub-ldapauthenticator pyzmq sudospawner --three 2>&1
	sudo -u $app python3 -m pipenv run jupyterhub upgrade-db 2>&1
popd

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=3

# Create a dedicated systemd config
ynh_replace_string --match_string="__NODE_PATH__" --replace_string="$nodejs_path" --target_file="../conf/systemd.service"

ynh_add_systemd_config

#=================================================
# MODIFY A CONFIG FILE
#=================================================

mkdir -p "$install_dir/config"
path="${path%/}"

ynh_add_config --template="jupyterhub_config.py" --destination="$install_dir/config/jupyterhub_config.py"
ynh_add_config --template="jupyter_server_config.py" --destination="$install_dir/config/jupyter_server_config.py"
ynh_add_config --template="app-sudoers" --destination="/etc/sudoers.d/$app-sudoers"
ynh_add_config --template="sudospawner-singleuser" --destination="$install_dir/.venv/bin/sudospawner-singleuser"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chmod 550 "$install_dir/.venv/bin/sudospawner-singleuser"
chown -R $app:$app "$install_dir"
chmod -R g=u,g-w,o-rwx "$install_dir"
setfacl -nR -m g:$app.main:rx -m d:g:$app.main:rx "$install_dir/.venv"
setfacl -n -m g:$app.main:x "$install_dir"
chown root:root "/etc/sudoers.d/$app-sudoers"
chmod 440 "/etc/sudoers.d/$app-sudoers"

#=================================================
# BUILD USER LABS
#=================================================
ynh_script_progression --message="Building JupyterLab for each user..." --weight=10

if [ $enable_extensions -eq 1 ]; then
	ynh_use_nodejs
	for user in $(ynh_user_list); do
		JUPYTERLAB_DIR="$(getent passwd $user | cut -d: -f6)/.local/share/$app/lab"
		node_path="$nodejs_path:$(sudo -u $user sh -c 'echo $PATH')"
		sudo -u $user env "PATH=$node_path" "$install_dir/.venv/bin/jupyter" lab build --app-dir="$JUPYTERLAB_DIR"
	done
fi

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --description="$app daemon" --log="$app"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=3

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --line_match="JupyterHub is now running at" --log_path="systemd"

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=4

# Make app public if necessary
#REMOVEME? if [ $is_public -eq 1 ]; then
#REMOVEME? 	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
